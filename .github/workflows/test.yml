name: Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev,scrubbing]

      - name: Lint with flake8
        run: |
          flake8 blobify/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 blobify/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=180 --statistics

      - name: Check formatting with black
        run: |
          black --check blobify/ tests/

      - name: Check import sorting with isort
        run: |
          isort --check-only blobify/ tests/

      - name: Test with pytest
        run: |
          pytest --junitxml=test-results.xml --cov=blobify --cov-report=xml --cov-report=term-missing

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
          path: test-results.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
