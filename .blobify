# Default context - all content
+pyproject.toml
+.pre-commit-config.yaml
+.github\workflows\test.yml
+.blobify
+misc\blobify-dark.svg
+LICENSE
@copy-to-clipboard=true
@show-excluded=false
@enable-scrubbing=false
@output-line-numbers=true
@output-index=false

[docs-only]
# Context for documentation review (use with -x docs-only or --context=docs-only)
-**
+*.md
@copy-to-clipboard=false
@show-excluded=false
@output-metadata=false

[method-signatures:default]
# Enhanced context for method signatures and structure analysis
# Extracts class definitions, method signatures, type hints, decorators, and return statements from Python files
@filter="signatures","^ *(class\s+\w+.*:|def\s+\w+.*:|@\w+.*|async\s+def\s+\w+.*:)","*.py"
@filter="returns","^ *(return\s+.*|yield\s+.*)","*.py"
@filter="imports","^ *(from\s+\w+.*import.*|import\s+\w+.*)","*.py"
@filter="docstrings","^ *\"\"\".*|^ *'''.*|^ *r?\"\"\".*|^ *r?'''.*","*.py"
@filter="type-hints",".*:\s*\w+.*->.*|.*:\s*[A-Z]\w*\[.*\]|.*:\s*(str|int|bool|float|list|dict|tuple|set|Optional|Union|Any|Callable)","*.py"
@output-line-numbers=false

[comprehensive-signatures:default]
# More comprehensive signature extraction including constants and error handling from Python files
@filter="classes","^ *class\s+\w+.*:","*.py"
@filter="functions","^ *(def\s+\w+.*:|async\s+def\s+\w+.*:)","*.py"
@filter="decorators","^ *@\w+.*","*.py"
@filter="returns","^ *(return\s+.*|yield\s+.*)","*.py"
@filter="imports","^ *(from\s+\w+.*import.*|import\s+\w+.*)","*.py"
@filter="constants","^ *[A-Z_][A-Z0-9_]*\s*=.*","*.py"
@filter="exceptions","^ *(raise\s+.*|except\s+.*:|try:|finally:)","*.py"
@filter="docstrings","^ *\"\"\".*|^ *'''.*","*.py"
@output-line-numbers=false

[api-surface:default]
# Extract public API surface - classes, functions, and their signatures from Python files
@filter="public-classes","^ *class\s+[A-Z]\w*.*:","*.py"
@filter="public-functions","^ *def\s+[a-z_]\w*.*:","*.py"
@filter="public-async","^ *async\s+def\s+[a-z_]\w*.*:","*.py"
@filter="exports","^ *__all__\s*=.*","*.py"
@filter="imports","^ *(from\s+\w+.*import.*|import\s+\w+.*)","*.py"
@filter="module-docs","^ *\"\"\".*|^ *'''.*","*.py"
@output-line-numbers=false

[structure-overview:default]
# High-level code structure for quick understanding
@filter="classes","^ *class\s+\w+.*:","*.py"
@filter="main-functions","^ *def\s+(main|__main__|run|execute|start).*:","*.py"
@filter="init-methods","^ *def\s+__init__.*:","*.py"
@filter="special-methods","^ *def\s+__\w+__.*:","*.py"
@filter="imports","^ *(from\s+\w+.*import.*|import\s+\w+.*)","*.py"
@filter="constants","^ *[A-Z_][A-Z0-9_]*\s*=.*","*.py"
@output-line-numbers=false

# Example that can be used to selectively build up a context from individual "mixins"

[nothing]
# Example context that returns nothing
@show-excluded=false
-**
@output-index=false

[test1]
+LICENSE

[test2]
+README.md

[test3:nothing,test1,test2]
# Will only include LICENSE and README.md

[clean-output:default]
# Clean output with minimal noise
@show-excluded=false
@output-metadata=false
@output-line-numbers=false
@copy-to-clipboard=true

[debug-mode:default]
# Debug mode with verbose output
@debug=true
@enable-scrubbing=false
@output-metadata=true

[clipboard-ready:default]
# Ready for clipboard with clean output
@copy-to-clipboard=true
@show-excluded=false
@output-metadata=false

[file-export:default]
# Configuration for file export
@output-filename=project-export.txt
@show-excluded=false
@output-metadata=true

[todo-finder]
# Find all TODOs, FIXMEs, and similar markers across all file types
@filter="todos","(TODO|FIXME|XXX|HACK|NOTE|WARNING)"
@show-excluded=false
@output-line-numbers=true
@copy-to-clipboard=true
+**

[yaml-config]
# Extract YAML configuration patterns
@filter="yaml-keys","^\\s*[a-zA-Z][a-zA-Z0-9_-]*\\s*:","*.yml"
@filter="yaml-keys","^\\s*[a-zA-Z][a-zA-Z0-9_-]*\\s*:","*.yaml"
@show-excluded=false
@output-line-numbers=false
+*.yml
+*.yaml

[python-only:default]
# Python-specific analysis
@filter="functions","^\\s*(def|async def)\\s+","*.py"
@filter="classes","^\\s*class\\s+","*.py"
@filter="imports","^\\s*(import|from)\\s+","*.py"
@show-excluded=false
+*.py
