# Default context - all content
## This output contains core project configuration files including build settings, CI workflows, and licensing information
+pyproject.toml
+.pre-commit-config.yaml
+.github\workflows\test.yml
+.blobify
+misc\blobify-dark.svg
+LICENSE
@copy-to-clipboard=true
@show-excluded=false
@enable-scrubbing=false
@output-line-numbers=false
@output-index=false
@output-metadata=false

[docs-only]
# Context for documentation review (use with -x docs-only or --context=docs-only)
## This output contains all Markdown documentation files from the blobify project
## Blobify is a Python tool that packages codebases into single text files for AI consumption
-**
+*.md
@copy-to-clipboard=true
@show-excluded=false
@output-metadata=false

[tests]
# Context for tests review
## This output contains all test files from the blobify project with line numbers for debugging
## Blobify is a Python CLI tool for packaging codebases into AI-consumable text files
## The test suite covers configuration parsing, file scanning, content filtering, and output formatting
-**
+tests/**
@copy-to-clipboard=true
@show-excluded=false
@show-index=false
@output-metadata=false
@output-line-numbers=true
@enable-scrubbing=false

[code-only: default]
# Context for code files only
## This output contains all source code files from the blobify Python project
## Blobify is a command-line tool that recursively scans directories and packages text files into a single output
## The codebase includes modules for file scanning, git integration, content processing, and output formatting
-**
+README.md
+blobify/**

[method-signatures:default]
# Enhanced context for method signatures and structure analysis
# Extracts class definitions, method signatures, type hints, decorators, and return statements from Python files
## This output contains filtered Python code showing class definitions, method signatures, and type annotations from blobify
## Blobify is a file aggregation tool that respects gitignore patterns and supports content filtering through .blobify configuration files
## The filtered output shows the structural elements: classes, functions, decorators, imports, docstrings, and type hints
@filter="signatures","^ *(class\s+\w+.*:|def\s+\w+.*:|@\w+.*|async\s+def\s+\w+.*:)","*.py"
@filter="returns","^ *(return\s+.*|yield\s+.*)","*.py"
@filter="imports","^ *(from\s+\w+.*import.*|import\s+\w+.*)","*.py"
@filter="docstrings","^ *\"\"\".*|^ *'''.*|^ *r?\"\"\".*|^ *r?'''.*","*.py"
@filter="type-hints",".*:\s*\w+.*->.*|.*:\s*[A-Z]\w*\[.*\]|.*:\s*(str|int|bool|float|list|dict|tuple|set|Optional|Union|Any|Callable)","*.py"
@output-line-numbers=false

[comprehensive-signatures:default]
# More comprehensive signature extraction including constants and error handling from Python files
## This output contains comprehensive Python code structure from blobify including classes, functions, constants, and exception handling
## Blobify is a Python tool for packaging entire codebases into single text files with support for gitignore patterns and content scrubbing
## The filtered output includes class definitions, function signatures, decorators, error handling blocks, constants, and documentation
@filter="classes","^ *class\s+\w+.*:","*.py"
@filter="functions","^ *(def\s+\w+.*:|async\s+def\s+\w+.*:)","*.py"
@filter="decorators","^ *@\w+.*","*.py"
@filter="returns","^ *(return\s+.*|yield\s+.*)","*.py"
@filter="imports","^ *(from\s+\w+.*import.*|import\s+\w+.*)","*.py"
@filter="constants","^ *[A-Z_][A-Z0-9_]*\s*=.*","*.py"
@filter="exceptions","^ *(raise\s+.*|except\s+.*:|try:|finally:)","*.py"
@filter="docstrings","^ *\"\"\".*|^ *'''.*","*.py"
@output-line-numbers=false

[api-reference:comprehensive-signatures]
# API Reference - Public interfaces and method signatures
# Extracts all public classes, functions, and their complete signatures
# Includes docstrings and type hints for comprehensive API documentation
## This output contains the public API surface of blobify along with the complete README documentation
## Blobify is a Python CLI tool that aggregates codebases into single text files for AI analysis and code review
## The output includes public classes, functions, module documentation, and the complete project README for API reference
@filter="public-classes","^ *class [A-Z][a-zA-Z0-9_]*[^_].*:","*.py"
@filter="public-functions","^ *(def|async def) [a-z_][a-zA-Z0-9_]*[^_].*:","*.py"
@filter="module-docs","^ *\"\"\".*","*.py"
@filter="exports","^ *__all__\s*=.*","*.py"
@filter="comments","^ *#.*","*.py"
@filter="markdown-content",".*","README.md"
@output-line-numbers=false
@copy-to-clipboard=true
@show-excluded=false
-**
+README.md
+blobify/*.py

[api-surface:default]
# Extract public API surface - classes, functions, and their signatures from Python files
## This output contains the public API surface of blobify showing classes, functions, async methods, and module documentation
## Blobify is a Python package for aggregating text files from codebases with gitignore support and content filtering capabilities
## The filtered output shows public classes, function signatures, exports, imports, and module-level documentation
@filter="public-classes","^ *class\s+[A-Z]\w*.*:","*.py"
@filter="public-functions","^ *def\s+[a-z_]\w*.*:","*.py"
@filter="public-async","^ *async\s+def\s+[a-z_]\w*.*:","*.py"
@filter="exports","^ *__all__\s*=.*","*.py"
@filter="imports","^ *(from\s+\w+.*import.*|import\s+\w+.*)","*.py"
@filter="module-docs","^ *\"\"\".*|^ *'''.*","*.py"
@output-line-numbers=false

[structure-overview:default]
# High-level code structure for quick understanding
## This output contains high-level structural elements from the blobify Python codebase
## Blobify is a file aggregation tool that converts codebases into single text files for AI consumption
## The filtered output shows class definitions, main functions, constructors, special methods, imports, and constants
@filter="classes","^ *class\s+\w+.*:","*.py"
@filter="main-functions","^ *def\s+(main|__main__|run|execute|start).*:","*.py"
@filter="init-methods","^ *def\s+__init__.*:","*.py"
@filter="special-methods","^ *def\s+__\w+__.*:","*.py"
@filter="imports","^ *(from\s+\w+.*import.*|import\s+\w+.*)","*.py"
@filter="constants","^ *[A-Z_][A-Z0-9_]*\s*=.*","*.py"
@output-line-numbers=false

# Example that can be used to selectively build up a context from individual "mixins"

[nothing]
# Example context that returns nothing
## This output contains no files and serves as a base context for inheritance in blobify configuration
## Blobify supports context inheritance allowing child contexts to build upon parent configurations
@show-excluded=false
-**
@output-index=false

[test1]
## This output contains the MIT license file from the blobify project
## Blobify is an open-source Python tool for packaging codebases into AI-consumable text files
+LICENSE

[test2]
## This output contains the main README documentation for the blobify project
## Blobify is a Python CLI tool that recursively scans directories and packages text files for AI analysis
+README.md

[test3:nothing,test1,test2]
# Will only include LICENSE and README.md
## This output contains the LICENSE and README files from blobify through context inheritance
## Blobify is a Python tool that packages codebases into single text files with gitignore support and content filtering

[clean-output:default]
# Clean output with minimal noise
## This output contains blobify project files with minimal metadata and clean formatting
## Blobify is a Python codebase aggregation tool designed for feeding entire projects to AI assistants
## This context optimizes for clean presentation without debug information or metadata clutter
@show-excluded=false
@output-metadata=false
@output-line-numbers=false
@copy-to-clipboard=true

[debug-mode:default]
# Debug mode with verbose output
## This output contains blobify project files with debug information enabled and detailed metadata
## Blobify is a Python CLI tool that converts codebases into single text files with gitignore integration
## This context includes full debugging output with metadata and unprocessed content for development purposes
@debug=true
@enable-scrubbing=false
@output-metadata=true

[clipboard-ready:default]
# Ready for clipboard with clean output
## This output contains blobify project files formatted for clipboard sharing with minimal metadata
## Blobify is a Python tool for aggregating codebases into AI-consumable text files with content filtering support
## This context optimizes for easy sharing via clipboard with clean formatting
@copy-to-clipboard=true
@show-excluded=false
@output-metadata=false

[file-export:default]
# Configuration for file export
## This output contains blobify project files exported with detailed metadata for archival purposes
## Blobify is a Python codebase packaging tool that respects gitignore patterns and supports content scrubbing
## This context creates comprehensive project exports with full metadata and timestamps
@output-filename=project-export.txt
@show-excluded=false
@output-metadata=true

[todo-finder]
# Find all TODOs, FIXMEs, and similar markers across all file types
## This output contains all TODO, FIXME, XXX, HACK, NOTE, and WARNING comments found in the blobify codebase
## Blobify is a Python tool for packaging entire codebases into single text files for AI consumption
## The filtered output shows development notes, outstanding work items, and technical debt markers with line numbers
@filter="todos","(TODO|FIXME|XXX|HACK|NOTE|WARNING)"
@show-excluded=false
@output-line-numbers=true
@copy-to-clipboard=true
+**

[yaml-config]
# Extract YAML configuration patterns
## This output contains YAML configuration key definitions from the blobify project's .yml and .yaml files
## Blobify is a Python codebase aggregation tool with support for CI/CD workflows and pre-commit hooks
## The filtered output shows configuration structure from GitHub Actions workflows and other YAML files
@filter="yaml-keys","^\\s*[a-zA-Z][a-zA-Z0-9_-]*\\s*:","*.yml"
@filter="yaml-keys","^\\s*[a-zA-Z][a-zA-Z0-9_-]*\\s*:","*.yaml"
@show-excluded=false
@output-line-numbers=false
+*.yml
+*.yaml

[python-only:default]
# Python-specific analysis
## This output contains Python function definitions, class definitions, and import statements from the blobify codebase
## Blobify is a Python CLI tool that packages codebases into single text files with gitignore integration and content filtering
## The filtered output shows Python code structure including functions, classes, and import dependencies
@filter="functions","^\\s*(def|async def)\\s+","*.py"
@filter="classes","^\\s*class\\s+","*.py"
@filter="imports","^\\s*(import|from)\\s+","*.py"
@show-excluded=false
+*.py
